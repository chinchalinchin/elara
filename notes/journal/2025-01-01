Definition 3.1.12: Pivot Words

Let ζ be a sentence in C:sub:L with length Λ(ζ) and pivot ω(ζ). The left pivot word, denoted α:sub:ζ:sup:-ω, and the right pivot word, denoted α:sub:ζ:sup:+ω, are defined as follows:

Case 1: Λ(ζ) = 1

α:sub:ζ:sup:-ω = α:sub:ζ:sup:+ω = the only word in ζ (which is also α:sub:ζ:sup:start and α:sub:ζ:sup:end)
Case 2: Λ(ζ) > 1

α:sub:ζ:sup:-ω = the word β such that (ω(ζ), β) ∈ W:sub:ζ
α:sub:ζ:sup:+ω = the word β such that (ω(ζ) + 1, β) ∈ W:sub:ζ
Explanation:

Case 1 (Single-Word Sentences): If the sentence has only one word, then that word is both the left and right pivot word. This ensures consistency and handles the edge case gracefully.
Case 2 (Multi-Word Sentences):
The left pivot word is the word at position ω(ζ) in the word-level representation.
The right pivot word is the word at position ω(ζ) + 1 in the word-level representation.
Uniqueness: The pivot words are uniquely defined because the word-level representation W:sub:ζ is a function, and each position corresponds to a unique word.
Notation: Using α:sub:ζ:sup:-ω and α:sub:ζ:sup:+ω explicitly indicates the dependence of the pivot words on the sentence ζ and their relationship to the pivot ω(ζ).
Further Considerations:

Odd vs. Even Length:
In odd-length sentences, ω(ζ) will correspond to the index of the middle word, which will be α:sub:ζ:sup:-ω. The right pivot word, α:sub:ζ:sup:+ω, will be the word immediately to the right of the middle word.
In even-length sentences, ω(ζ) will fall between two words. α:sub:ζ:sup:-ω will be the word immediately to the left of the "middle", and α:sub:ζ:sup:+ω will be the word immediately to the right of the "middle".

Relationship to Partial Sentences: The pivot words are closely related to the partial sentences at the pivot. In a sense, α:sub:ζ:sup:-ω is the "last" word of the left partial sentence ζ[:ω(ζ)], and α:sub:ζ:sup:+ω is the "first" word of the right partial sentence ζ[ω(ζ) + 1:] (for even-length sentences) or ζ[ω(ζ):] (for odd-length sentences).
Theorems: You'll likely want to prove theorems about the properties of pivot words, such as their relationship to the boundary words in palindromes and their behavior under inversion and σ-reduction.
Example:

ζ = "a b c" (odd length): Λ(ζ) = 3, ω(ζ) = 2, α:sub:ζ:sup:-ω = "b", α:sub:ζ:sup:+ω = "c"
ζ = "a b c d" (even length): Λ(ζ) = 4, ω(ζ) = 2, α:sub:ζ:sup:-ω = "b", α:sub:ζ:sup:+ω = "c"
ζ = "x"










From Theorem 1.2.6,

Inversion and σ-reduction: Since σ_reduce(ζ) = inv(σ_reduce(ζ)), the first word of σ_reduce(ζ) must be the inverse of the last word of σ_reduce(ζ), and vice-versa. Therefore:

σ_reduce(α:sub:ζ:sup:start) = inv(σ_reduce(α:sub:ζ:sup:end))
σ_reduce(α:sub:ζ:sup:end) = inv(σ_reduce(α:sub:ζ:sup:start))
Invertibility of Words:

Since ζ is a palindrome, it is also a sentence in the Corpus.
By the definition of boundary words (Definition 3.2.9), α:sub:ζ:sup:start and α:sub:ζ:sup:end are words in the word-level representation of ζ.
By Axiom S.3 (Extraction Axiom), all words in the word-level representation of a sentence in the Corpus belong to the Language L.
Therefore, α:sub:ζ:sup:start and α:sub:ζ:sup:end are words in L.
Words in a language cannot be empty by Theorem 1.2.4.
Implication of Step 4 and Step 5:

From Step 4 and Step 5, we know σ_reduce(α:sub:ζ:sup:start) and σ_reduce(α:sub:ζ:sup:end) are non-empty strings since they are composed of words in L.
Because σ_reduce(α:sub:ζ:sup:start) = inv(σ_reduce(α:sub:ζ:sup:end)), we know there exists at least one sequence of characters in α:sub:ζ:sup:start which is the inverse of a sequence of characters in α:sub:ζ:sup:end.
This means either inv(α:sub:ζ:sup:start) is contained in α:sub:ζ:sup:end, or inv(α:sub:ζ:sup:end) is contained in α:sub:ζ:sup:start, because of the properties of string inversion and containment.
In the first case, the inverse of the starting word could be a prefix of the ending word, such as in the palindrome "a b c a".
In the second case, the inverse of the ending word could be a suffix of the starting word, such as in the palindrome "a b a".
It is also possible for both conditions to obtain in the same sentence, such as in the palindrome "abc cba".
Conclusion: Therefore:

( inv(α:sub:ζ:sup:start) ⊂:sub:s α:sub:ζ:sup:end) ∨ ( inv(α:sub:ζ:sup:end) ⊂:sub:s α:sub:ζ:sup:start )
Since ζ was an arbitrary palindrome, we can generalize:

*   ∀ ζ ∈ P : ( inv(α:sub:`ζ`:sup:`start`) ⊂:sub:`s` α:sub:`ζ`:sup:`end`) ∨ ( inv(α:sub:`ζ`:sup:`end`) ⊂:sub:`s` α:sub:`ζ`:sup:`start` )
This completes the proof. ∎

Explanation:

The proof leverages the fact that in a palindrome, the σ-reduction of the starting word is the inverse of the σ-reduction of the ending word. This, combined with the properties of inversion and containment, implies that either the inverse of the starting word must be contained in the ending word or the inverse of the ending word must be contained in the starting word.

Why the Original Statement Holds for Imperfect Palindromes:

In imperfect palindromes, the delimiters are rearranged during inversion. However, the σ-reduction removes the delimiters, effectively eliminating the difference between perfect and imperfect palindromes in this context. Thus, the relationship between the starting and ending words (after σ-reduction) still holds, even if it's not immediately apparent in their character-level representation without σ-reduction.




**Theorem 3.2.1: The Boundary Postulate** ∀ ζ ∈ P : ( inv(α:sub:`ζ`:sup:`start`) ⊂:sub:`s` α:sub:`ζ`:sup:`end`) ∨ ( nv(α:sub:`ζ`:sup:`end`) ⊂:sub:`s` α:sub:`ζ`:sup:`start` )

This theorem can be stated in natural language as follows: For any Palindrome, either the starting word is contained in the ending word, or the ending word is contained in the starting word.

Theorem (First Inverse Postulate): ∀ ζ ∈ P : ( α:sub:start ⊂:sub:s α:sub:end ) ∨ ( α:sub:end ⊂:sub:s α:sub:start )

Proof:

Assume ζ ∈ P (ζ is a Palindrome).

Word-level representations:

Let W:sub:ζ = (α₁ , α₂ , ..., αₙ) be the Word-level representation of ζ, where n = Λ(ζ).
By Definition 3.2.9 (Boundary Words), α₁ = α:sub:start and αₙ = α:sub:end.
σ-reduction: By the definition of σ-reduction, (Ζ ⋅ Σ:sub:σ) is obtained by concatenating the Words in W:sub:ζ without Delimiters:

(Ζ ⋅ Σ:sub:σ) = α₁α₂...αₙ

Palindrome definition: Since ζ is a Palindrome, by Definition 3.1.2:

(Ζ ⋅ Σ:sub:σ) = inv(Ζ ⋅ Σ:sub:σ)

Applying Theorem 1.2.5.1: Using Theorem 1.2.5.1 repeatedly on inv(Ζ ⋅ Σ:sub:σ) , we get:

inv(Ζ ⋅ Σ:sub:σ) = inv(α₁α₂...αₙ)
= inv(αₙ)...inv(α₂) inv(α₁)

Combining equations: Combining equations from steps 3 and 5, we have:

α₁α₂...αₙ = inv(αₙ)...inv(α₂) inv(α₁)

Analyzing cases: Now, let's consider the lengths of the Boundary Words, α₁ (α:sub:start) and αₙ (α:sub:end). There are three cases:

Case 1: l(α₁) = l(αₙ)

In this case, the equation in step 6 implies that α₁ = inv(αₙ) and αₙ = inv(α₁).
Since α₁ and αₙ are Invertible Words (by Theorem 2.3.5), this means α₁ = αₙ.
Therefore, both α:sub:start ⊂:sub:s α:sub:end and α:sub:end ⊂:sub:s α:sub:start hold.
Case 2: l(α₁) < l(αₙ)

In this case, the equation in step 6 implies that α₁ is a contiguous subsequence of inv(αₙ).
Since αₙ is an Invertible Word, inv(αₙ) is also a Word in the Language.
By Definition 1.1.7 (Containment), this means α₁ ⊂:sub:s inv(αₙ).
Since inv(inv(αₙ)) = αₙ* (Theorem 1.2.4), it follows that α₁ ⊂:sub:s αₙ, which means α:sub:start ⊂:sub:s α:sub:end.
Case 3: l(α₁) > l(αₙ)

This case is analogous to Case 2, but with the roles of α₁ and αₙ reversed.
Following a similar argument, we can conclude that αₙ ⊂:sub:s α₁, which means α:sub:end ⊂:sub:s α:sub:start.
Conclusion: In all three cases, we have shown that either α:sub:start ⊂:sub:s α:sub:end or α:sub:end ⊂:sub:s α:sub:start.

Therefore, ∀ ζ ∈ P : ( α:sub:start ⊂:sub:s α:sub:end ) ∨ ( α:sub:end ⊂:sub:s α:sub:start ) ∎

Explanation:

This proof demonstrates that in any Palindrome, either the starting Word is contained within the ending Word, or the ending Word is contained within the starting Word. This is a significant result that reveals a fundamental property of palindromic structures.

The proof relies on the properties of σ-reduction, the involutive property of String Inversion, the fact that all Words in an invertible Sentence are Invertible Words, and a careful analysis of the lengths of the Boundary Words.






Issues with the Original Formulation:

ⲁ:sub:ω(ζ) Notation: While we've used subscript notation for indexing characters within words (e.g., ⲁ:sub:i for the i-th character of a word), using it directly with ω(ζ) to represent the character at the pivot position is not consistent with our previous notation. ω(ζ) represents the index or position of the pivot, not the character itself.
Character vs. Index: The theorem attempts to equate a character (ⲁ:sub:ω(ζ)) with a delimiter (σ), but it doesn't explicitly state that ⲁ:sub:ω(ζ) is the character at the pivot position in the sentence.
Revised Formulation:

To address these issues, we can introduce notation to refer to the character at a specific index within a sentence and explicitly connect it to the pivot position.

Proposed Solution:

Notation for Character at Index: Let's use the notation ζ[i] to represent the character at index i in sentence ζ.

Revised Theorem Statement:

Theorem 3.2.2 (Second Inverse Postulate): ∀ ζ ∈ P: (ζ[ω(ζ)] = σ) → ( inv(α:sub:ζ:sup:-ω) ⊂:sub:s α:sub:ζ:sup:+ω) ∨ ( inv(α:sub:ζ:sup:+ω) ⊂:sub:s α:sub:ζ:sup:-ω )

Translation: For every palindrome ζ in the corpus, if the character at the pivot index ω(ζ) is a delimiter (σ), then either the inverse of the left pivot word is contained in the right pivot word, or the inverse of the right pivot word is contained in the left pivot word.

Explanation:

ζ[ω(ζ)]: This clearly denotes the character at the pivot index in sentence ζ.
ζ[ω(ζ)] = σ: This condition explicitly states that the character at the pivot is a delimiter.
The Rest: The rest of the theorem statement remains the same, but the connection between the pivot character and the pivot words is now clearer.
Proof Outline (Informal):

Assume ζ ∈ P and ζ[ω(ζ)] = σ: We start with a palindrome where the character at the pivot index is a delimiter.
σ-reduction: Consider σ_reduce(ζ). Since the pivot character is a delimiter, it will be removed during σ-reduction.
Palindrome Property: Since ζ is a palindrome, σ_reduce(ζ) = inv(σ_reduce(ζ)).
Pivot Words: The left pivot word (α:sub:ζ:sup:-ω) and the right pivot word (α:sub:ζ:sup:+ω) will become adjacent in σ_reduce(ζ) after the delimiter at the pivot is removed.
Inversion: Due to the palindrome property and the fact that the pivot delimiter is removed, the σ-reduction of the left pivot word will be the inverse of the σ-reduction of the right pivot word (or vice-versa).
Containment: Similar to the First Inverse Postulate, this implies that either the inverse of the left pivot word is contained in the right pivot word, or the inverse of the right pivot word is contained in the left pivot word.
Formal Proof: (This would require careful consideration of how σ-reduction interacts with the pivot words and the removal of the delimiter at the pivot. It might involve introducing lemmas about the relationship between the σ-reduced partial sentences and the pivot words.)

Further Considerations:

Empty Pivot Words: We need to be mindful of cases where the pivot words might be empty (e.g., if the palindrome has only delimiters or if the pivot falls at the very beginning or end of the sentence). The definition of containment might need to be adjusted to handle these cases.
Relationship to First Inverse Postulate: It's worth exploring whether there's any connection or overlap between the First and Second Inverse Postulates. For example, can one be derived from the other, or are they truly independent postulates?





You're absolutely right! That's excellent reasoning. We can definitively say that the pivot words cannot be empty in the context of the Second Inverse Postulate. Here's why:

1.  ζ[ω(ζ)] = σ: The theorem's premise explicitly states that the character at the pivot index ω(ζ) is a delimiter (σ).

2. Discovery Axiom (W.1): This axiom states that words in a language (and therefore in a sentence) cannot contain delimiters.

3.  Revised Axiom S.2 (Word-Sentence Duality): This axiom states that every sentence must contain at least one word.

4.  Definition of Pivot Words: The pivot words α:sub:ζ:sup:-ω and α:sub:ζ:sup:+ω are defined as the words at positions ω(ζ) and ω(ζ) + 1, respectively, in the word-level representation W:sub:ζ.

Logical Deduction:

Since ζ[ω(ζ)] is a delimiter (premise), and words cannot contain delimiters (Axiom W.1), the pivot index ω(ζ) cannot fall within a word.
Since every sentence must contain at least one word (Axiom S.2), and the pivot index does not fall within a word, it must fall between two words (or at the very beginning or end of the sentence, but those cases are ruled out by the premise that the pivot character is a delimiter).
Therefore, there must be a word immediately to the left of the pivot (α:sub:ζ:sup:-ω) and a word immediately to the right of the pivot (α:sub:ζ:sup:+ω).
Since words in a language cannot be empty (Theorem 1.2.4), neither α:sub:ζ:sup:-ω nor α:sub:ζ:sup:+ω can be empty.
Conclusion:

Your reasoning is entirely correct. The pivot words cannot be empty in the context of the Second Inverse Postulate. This is a crucial observation and simplifies the proof, as we don't need to handle those edge cases.

Formal Proof of the Second Inverse Postulate (Theorem 3.2.2):





Theorem (Second Inverse Postulate): ∀ ζ ∈ P: (ω:sub:ζ = σ) → ( α:sub:- (ω:sub:ζ) ⊂ α:sub:+ (ω:sub:ζ) ) ∨ ( α:sub:+ (ω:sub:ζ) ⊂ α:sub:- (ω:sub:ζ) )

Proof:

Assume ζ ∈ P (ζ is a Palindrome) and ω:sub:ζ = σ (the Pivot is the Delimiter Character).

Word-level representation: Let W:sub:ζ = (α₁ , α₂ , ..., αₙ) be the Word-level representation of ζ, where n = Λ(ζ).

Pivot Words: Since ω:sub:ζ = σ, the Pivot lies between two Words. Let k be the index such that the Delimiter Pivot ω:sub:ζ is between αₖ and αₖ₊₁. By Definition 3.2.2 (Pivot Words - Revised):

α:sub:-(ω:sub:ζ) = αₖ
α:sub:+(ω:sub:ζ) = αₖ₊₁
σ-reduction: By the definition of σ-reduction, (Ζ ⋅ Σ:sub:σ) is obtained by concatenating the Words in W:sub:ζ without Delimiters:

(Ζ ⋅ Σ:sub:σ) = α₁α₂...αₙ

Palindrome definition: Since ζ is a Palindrome, by Definition 3.1.2:

(Ζ ⋅ Σ:sub:σ) = inv(Ζ ⋅ Σ:sub:σ)

Applying Theorem 1.2.5.1: Using Theorem 1.2.5.1 repeatedly on inv(Ζ ⋅ Σ:sub:σ) , we get:

inv(Ζ ⋅ Σ:sub:σ) = inv(α₁α₂...αₙ)
= inv(αₙ)...inv(α₂) inv(α₁)

Combining equations: Combining equations from steps 4 and 6, we have:

α₁α₂...αₙ = inv(αₙ)...inv(α₂) inv(α₁)

Analyzing Pivot Words: Since the Pivot is between αₖ and αₖ₊₁, the equation in step 7 implies:

αₖ αₖ₊₁ = inv(αₖ₊₁) inv(αₖ)

Cases based on length:  Similar to the proof of the first Inverse Postulate, we consider the lengths of αₖ and αₖ₊₁:

Case 1: l(αₖ) = l(αₖ₊₁):

In this case, αₖ = inv(αₖ₊₁) and αₖ₊₁ = inv(αₖ).
Since αₖ and αₖ₊₁ are Invertible Words (by Theorem 2.3.5), this means αₖ = αₖ₊₁.
Therefore, both α:sub:- (ω:sub:ζ) ⊂ α:sub:+ (ω:sub:ζ) and α:sub:+ (ω:sub:ζ) ⊂ α:sub:- (ω:sub:ζ) hold.
Case 2: l(αₖ) < l(αₖ₊₁):

In this case, αₖ is a contiguous subsequence of inv(αₖ₊₁).
Since αₖ₊₁ is an Invertible Word, inv(αₖ₊₁) is also a Word in the Language.
By Definition 1.1.7 (Containment), this means αₖ ⊂:sub:s inv(αₖ₊₁).
Since inv(inv(αₖ₊₁)) = αₖ₊₁* (Theorem 1.2.4), it follows that αₖ ⊂:sub:s αₖ₊₁, which means α:sub:- (ω:sub:ζ) ⊂ α:sub:+ (ω:sub:ζ).
Case 3: l(αₖ) > l(αₖ₊₁):

This case is analogous to Case 2, but with the roles of αₖ and αₖ₊₁ reversed.
Following a similar argument, we can conclude that αₖ₊₁ ⊂:sub:s αₖ, which means α:sub:+ (ω:sub:ζ) ⊂ α:sub:- (ω:sub:ζ).
Conclusion: In all three cases, we have shown that either α:sub:- (ω:sub:ζ) ⊂ α:sub:+ (ω:sub:ζ) or α:sub:+ (ω:sub:ζ) ⊂ α:sub:- (ω:sub:ζ).

Therefore, ∀ ζ ∈ P: (ω:sub:ζ = σ) → ( α:sub:- (ω:sub:ζ) ⊂ α:sub:+ (ω:sub:ζ) ) ∨ ( α:sub:+ (ω:sub:ζ) ⊂ α:sub:- (ω:sub:ζ) ) ∎

Explanation:

This proof demonstrates that in any Palindrome where the Pivot is a Delimiter, either the Word to the left of the Pivot is contained within the Word to the right, or vice versa. This is another significant result that reveals a specific property of palindromes with Delimiter Pivots.

The proof follows a similar structure to the proof of the first Inverse Postulate, utilizing the properties of σ-reduction, String Inversion, Invertible Words, and a case analysis based on the lengths of the Pivot Words.






Proof:

Let ζ be an arbitrary palindrome in P such that ζ[ω(ζ)] = σ.

Definition of Palindrome: Since ζ is a palindrome, by Definition 3.1.2:

σ_reduce(ζ) = inv(σ_reduce(ζ))
Pivot Character: By the premise, ζ[ω(ζ)] = σ, meaning the character at the pivot index is a delimiter.

Pivot Words: Let α:sub:ζ:sup:-ω and α:sub:ζ:sup:+ω be the left and right pivot words of ζ, respectively (by Definition 3.2.10).

Non-Empty Pivot Words: As established earlier, α:sub:ζ:sup:-ω and α:sub:ζ:sup:+ω cannot be empty.

σ-reduction and Pivot: Since ζ[ω(ζ)] = σ, the delimiter at the pivot will be removed during σ-reduction. This means that in σ_reduce(ζ), the words σ_reduce(α:sub:ζ:sup:-ω) and σ_reduce(α:sub:ζ:sup:+ω) will be adjacent.

Word-Level Representation: Let W:sub:ζ be the word-level representation of ζ. Because of the delimiter at the pivot, we know:

W:sub:ζ = (..., α:sub:ζ:sup:-ω, α:sub:ζ:sup:+ω, ...)
σ-reduction of ζ:  We can express σ_reduce(ζ) as:

σ_reduce(ζ) = ...σ_reduce(α:sub:ζ:sup:-ω)σ_reduce(α:sub:ζ:sup:+ω)...
Inversion of σ-reduction: Since σ_reduce(ζ) = inv(σ_reduce(ζ)), we have:

...σ_reduce(α:sub:ζ:sup:-ω)σ_reduce(α:sub:ζ:sup:+ω)... = inv(...σ_reduce(α:sub:ζ:sup:-ω)σ_reduce(α:sub:ζ:sup:+ω)...)
Theorem 1.2.5: Applying Theorem 1.2.5 repeatedly to the right side of the equation:

...σ_reduce(α:sub:ζ:sup:-ω)σ_reduce(α:sub:ζ:sup:+ω)... = ...inv(σ_reduce(α:sub:ζ:sup:+ω))inv(σ_reduce(α:sub:ζ:sup:-ω))...
Equality and Inversion: From the equality in Step 9, we can deduce that:

σ_reduce(α:sub:ζ:sup:-ω) = inv(σ_reduce(α:sub:ζ:sup:+ω))
σ_reduce(α:sub:ζ:sup:+ω) = inv(σ_reduce(α:sub:ζ:sup:-ω))
Implication of Equality: Since neither pivot word is empty and they are inverses of each other after σ-reduction, this implies one is contained within the other before σ-reduction. Therefore:

( inv(α:sub:ζ:sup:-ω) ⊂:sub:s α:sub:ζ:sup:+ω) ∨ ( inv(α:sub:ζ:sup:+ω) ⊂:sub:s α:sub:ζ:sup:-ω )
Conclusion: Since ζ was an arbitrary palindrome satisfying the premise, we can generalize:

∀ ζ ∈ P: (ζ[ω(ζ)] = σ) → ( inv(α:sub:ζ:sup:-ω) ⊂:sub:s α:sub:ζ:sup:+ω) ∨ ( inv(α:sub:ζ:sup:+ω) ⊂:sub:s α:sub:ζ:sup:-ω )
This completes the proof. ∎

Explanation:

The proof hinges on the fact that when the pivot character is a delimiter, σ-reduction removes it, making the pivot words adjacent in the σ-reduced palindrome. Due to the palindrome property, these adjacent words must be inverses of each other after σ-reduction. This implies the containment relationship stated in the theorem.
























!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


Theorem 3.2.1 (First Inverse Postulate):

∀ ζ ∈ P: (inv(ζ{1}) ⊂:sub:s ζ{Λ(ζ)}) ∨ (inv(ζ{Λ(ζ)}) ⊂:sub:s ζ{1})

Proof:

Let ζ be an arbitrary palindrome in P.

Definition of Palindrome: Since ζ ∈ P, by Definition 3.1.2, ς(ζ) = inv(ς(ζ)).

First and Last Words: Let α = ζ{1} and β = ζ{Λ(ζ)} be the first and last words of ζ, respectively.

σ-reduction: By Axiom W.1, σ_reduce(α) = α and σ_reduce(β) = β.

σ-reduction of ζ: Since words do not contain delimiters, σ-reduction distributes over concatenation, allowing us to express σ_reduce(ζ) as:

ς(ζ) = α(ς(ζ{2}))...(ς(ζ{Λ(ζ)-1}))β
Inversion of σ-reduction: Taking the inverse of both sides and using the fact that ς(ζ) is a palindrome:

inv(ς(ζ)) = ς(ζ) = inv(α(ς(ζ{2}))...(ς(ζ{Λ(ζ)-1}))β)
Applying Theorem 1.2.5: Applying Theorem 1.2.5 repeatedly to distribute the inversion:

ς(ζ) = inv(β)inv(ς(ζ{Λ(ζ)-1}))...inv(ς(ζ{2}))inv(α)
Comparing Start and End: Now, we compare the start of ς(ζ) in step 4 with the end of inv(ς(ζ)) in step 6, and the end of ς(ζ) in step 4 with the start of inv(ς(ζ)) in step 6:

ς(ζ) starts with α and inv(ς(ζ)) ends with inv(α).
ς(ζ) ends with β and inv(ς(ζ)) starts with inv(β).
Trichotomy: By the trichotomy principle, one of the following must be true:

Case 1: l(α) = l(β):

This implies α = inv(β) and β = inv(α).
Since a word is always a substring of itself, we have α ⊂:sub:s inv(β) and inv(α) ⊂:sub:s β.
Case 2: l(α) > l(β):

This implies l(inv(α)) > l(β).
Since inv(β) is at the beginning of inv(ς(ζ)) and α is at the beginning of ς(ζ), and these are equal, inv(β) must be a substring of α.
Similarly, since α is at the end of inv(ς(ζ)) and β is at the end of ς(ζ), β must be a substring of inv(α).
Therefore, inv(β) ⊂:sub:s α and β ⊂:sub:s inv(α).
Case 3: l(α) < l(β):

This implies l(inv(α)) < l(β)
Similar to Case 2, we can conclude that α ⊂:sub:s inv(β) and inv(α) ⊂:sub:s β.
Conclusion: In all cases, we have either (inv(α) ⊂:sub:s β) or (inv(β) ⊂:sub:s α). Substituting back α = ζ{1} and β = ζ{Λ(ζ)}, we get:

(inv(ζ{1}) ⊂:sub:s ζ{Λ(ζ)}) ∨ (inv(ζ{Λ(ζ)}) ⊂:sub:s ζ{1})
Since ζ was an arbitrary palindrome, we can generalize:

∀ ζ ∈ P: (inv(ζ{1}) ⊂:sub:`s` ζ{Λ(ζ)}) ∨ (inv(ζ{Λ(ζ)}) ⊂:sub:`s` ζ{1})