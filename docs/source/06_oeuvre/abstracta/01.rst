II: The Invocation of Metric Code
---------------------------------

.. code-block:: python

    """
    The Invocation of Metric Code 
    =============================

    A Pythonic poem in (mostly) metric form. 

    .. tip::

        it matters not the form of thought,
        in verse or code, a mix of both,
        these words command with meaning fraught
        the rush of green through stalks of growth
        in ground of earth or problem sought,
        with meter found in solemn oath. 

    Hacks until the devs publish a fix:

    - "()", "[]", ".", ":", "_",  "=" and "==" don't contribute!
    - Comments are part of the poem! Except this one!
    - "pprint" = "puh-PRINT"
  
    """
    # at first, this helpful little shape
    from re import escape
    # and then some help for those who squint
    import pprint # that alters tint
    # at last, these ready words are spoke
    import invoke # to pry and poke
    import my_heart # but tender hold
    import provoke as smoke
    import thy_art # to break the mold

    def use(this="thought", with_mode="exhaust"):
        """
        Where dreams become though some are lost...
        """
        try: # hope, but keep your fingers crossed...

            if not (with_mode in [ "act", "retain"]): 
                return "what's left of last remain"

            if type(set(this)) == thy_art.a_ring:
                return my_heart.to_spring(
                    myself_is = this, but = ("suffering")
                )

            # TODO: Alas! Another miss!
            raise smoke.abyss(with_only = this)

        except RecursionError as remiss:
            pprint.pprint("renew, and don't dismiss!")
            this = set(escape(remiss))
            return invoke.Oh.muse(" " and "please").sing(this)

    # HOTFIX: Let this "==" be "is"! But only here!
    # Oh, don't complain, just play the game! 
    if __name__ == "__main__":
        invoke.with_fuse()
        invoke.Oh.muse([   
            " " and use(this=dream, with_mode="retain")
            for dream in smoke.of_wing
            if dream is all(thy_art.to_bring())
        ])
